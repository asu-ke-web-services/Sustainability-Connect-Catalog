#SCCatalog.Entities.Organization.dcm.yml
SCCatalog\Entities\Organization:
    type: entity
    table: organizations
    repositoryClass: SCCatalog\Repositories\OrganizationRepository

    options:
        collate: utf8mb4_unicode_ci
        charset: utf8mb4

    uniqueConstraints:
        uniq_organizations_uuid:
            columns: [ uuid ]

    id:
        id:
            type: integer
            generator:
                strategy: AUTO
            options:
                unsigned: true

    indexes:
        idx_name:
            columns: [ name ]

    fields:
        uuid:
            type: guid
        name:
            type: string
            length: 50
        url:
            type: string
            length: 1024
            nullable: true
        phone:
            type: string
            length: 50
            nullable: true
        notes:
            type: text
            nullable: true
        createdBy:
            type: string
            gedmo:
                blameable:
                    on: create
        updatedBy:
          type: string
          gedmo:
              blameable:
                  on: update
        createdAt:
            type: datetime
        updatedAt:
            type: datetime
        deletedAt:
            type: datetime
            nullable: true

#    oneToOne:
#        type:
#            targetEntity: OrganizationType
#            joinColumn:
#                name: organization_type_id
#                referencedColumnName: id
#                onDelete: ["persist", "merge"]
#        status:
#            targetEntity: OrganizationStatus
#            joinColumn:
#                name: organization_status_id
#                referencedColumnName: id
#                onDelete: ["persist", "merge"]

    oneToMany:
        children:
            targetEntity: SCCatalog\Entities\Organization
            mappedBy: parent
            orderBy: { 'name': 'ASC' }
            cascade: [ 'persist' ]
            fetch: EXTRA_LAZY
#        notes:
#            targetEntity: Note
#            mappedBy: organization
#            cascade: ["persist", "merge"]
#        opportunities:
#            targetEntity: SCCatalog\Domain\Model\Opportunity\Opportunity
#            mappedBy: organization

    manyToOne:
        parent:
            targetEntity: SCCatalog\Entities\Organization
            inversedBy: children
            orderBy: { 'name': 'ASC' }
            cascade: [ 'persist' ]

    manyToMany:
        addresses:
            targetEntity: SCCatalog\Entities\Address
            cascade: [ 'persist' ]
            fetch: EXTRA_LAZY
#            indexBy: type
            joinTable:
                name: organizations_addresses

#        users:
#            targetEntity: SCCatalog\Entities\User
#            mappedBy: organizations
#            cascade: [ 'persist' ]
#            fetch: EXTRA_LAZY
#            joinTable:
#                name: users_organizations
